name: Request

on: pull_request

jobs:
  iss:
    runs-on: ubuntu-18.04
    outputs:
      number: ${{steps.prNumber.outputs.number}}
    env:
      API_URL: https://daifppxrii.execute-api.ca-central-1.amazonaws.com/test/actions/
    steps:
      - uses: actions/checkout@v2
      # - name: Terraform Plan
      #   id: plan
      #   if: github.event_name == 'pull_request'
      #   run: exit 1
      #   continue-on-error: true

      # - name: Update Plan Status
      #   uses: fjogeleit/http-request-action@master
      #   with:
      #     url: "${{env.API_URL}}?status=plan"
      #     method: 'PUT'
      #     data: '{"prNumber": "${{ github.event.number }}", "planSuccess": "${{steps.plan.outcome}}""}'
      #     customHeaders: '{"Authorization": "secret"}'

      # - name: Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1

      - name: label test
        if: github.event.label.name == 'bug'
        run: echo holy guacomole it worked

      # - name: Get PR Number
      #   id: prNumber
      #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      #   run: |
      #     pr=$(curl -H "Accept: application/vnd.github.groot-preview+json" https://api.github.com/repos/${{github.repository}}/commits/${{github.sha}}/pulls)
      #     number=$(jq ".[0].number" <<< "$pr")
      #     fullLabels=$(jq ".[0].labels" <<< "$pr")
      #     botLabel=$(jq -c '.[] | select(.name | contains("auto_generated")).name' <<< "$fullLabels")
      #     echo "::set-output name=number::$number"
      #     echo "::set-output name=botLabel::$botLabel" 

      # - name: Echo variables
      #   run: |
      #     echo "${{steps.prNumber.outputs.botLabel}}"

      # - name: Update Apply Status
      #   uses: fjogeleit/http-request-action@master
      #   if: github.ref == 'refs/heads/master' && github.event_name == 'push' && steps.prNumber.outputs.botLabel == '"auto_generated"'
      #   with:
      #     url: '${{env.API_URL}}?status=apply'
      #     method: 'PUT'
      #     data: '{"prNumber": ${{ steps.prNumber.outputs.number }}, "applySuccess": "${{steps.apply.outcome != ''failure''}}"}'
      #     customHeaders: '{"Authorization": "${{secrets.GH_SECRET}}"}'